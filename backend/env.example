# ===========================================
# CREDIT CARD SUGGESTOR BACKEND CONFIGURATION
# ===========================================

# Environment
NODE_ENV=development
PORT=3000

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# PostgreSQL connection string
# Format: postgresql://username:password@localhost:5432/database_name
DATABASE_URL=postgresql://username:password@localhost:5432/credit_card_suggestor

# ===========================================
# GEMINI AI CONFIGURATION
# ===========================================
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# AI Models (Optional - defaults provided)
GEMINI_MODEL_CHEAP=gemini-2.0-flash-exp
GEMINI_MODEL_PREMIUM=gemini-2.0-flash-thinking-exp

# ===========================================
# SESSION & UPLOAD CONFIGURATION
# ===========================================
# Session expiry in hours
SESSION_EXPIRY_HOURS=24

# Maximum file upload size in MB
MAX_UPLOAD_SIZE_MB=10

# Temporary file storage directory
TEMP_UPLOAD_DIR=./uploads/temp

# File cleanup interval in minutes
CLEANUP_INTERVAL_MINUTES=60

# ===========================================
# PROCESSING CONFIGURATION
# ===========================================
# Maximum concurrent background jobs
MAX_CONCURRENT_JOBS=3

# Fuzzy matching threshold (0.0 to 1.0)
FUZZY_MATCH_THRESHOLD=0.8

# ===========================================
# RATE LIMITING
# ===========================================
# Rate limit window in milliseconds (15 minutes = 900000)
RATE_LIMIT_WINDOW_MS=900000

# Maximum requests per window
RATE_LIMIT_MAX_REQUESTS=100

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
# Log level: error, warn, info, http, verbose, debug, silly
LOG_LEVEL=info

# Service name for logging
SERVICE_NAME=credit-card-suggestor-api

# ===========================================
# MONITORING (OPTIONAL)
# ===========================================
# DataDog configuration (optional)
# DATADOG_API_KEY=your_datadog_api_key
# DATADOG_HOST=your_datadog_host
# DATADOG_SERVICE=credit-card-suggestor
# DATADOG_REGION=us1

# ===========================================
# DEVELOPMENT NOTES
# ===========================================
# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env files to version control
# 3. Ensure PostgreSQL is running before starting the server
# 4. Run 'npm run prisma:migrate:dev' to set up the database
# 5. Run 'npm run db:seed' to populate initial data
# 6. Get Gemini API key from Google AI Studio (free tier available)
#
# Quick Setup Commands:
# cp env.example .env
# npm install
# npm run prisma:generate
# npm run prisma:migrate:dev
# npm run db:seed
# npm run dev
